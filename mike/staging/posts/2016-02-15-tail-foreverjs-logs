<u>NAME</u>
<b>Tail foreverjs logs</b>

<u>SYNOPSIS</u>
<b><p>
<a href="https://github.com/foreverjs/forever">Forever</a> is "a simple CLI
tool for ensuring that a given script runs continuously (i.e. forever)."
</p></b>

<u>DESCRIPTION</u>
<b><p>
Forever includes a command ( <span class="arg">$ forever logs 0</span> ) to
show you the last 100 lines of stdout/stderr for the processes it is watching.
Often 100 lines is enough to see what you were hoping to see.
</p></b>

<b><p>
But sometimes 100 lines is not enough and instead you would like to see a
live tail of the forever watched process. Linux/Unix based operating system
tools to the rescue!
</p></b>

<b><p>
Running <span class="arg">$ forever logs</span> (assuming you are only watching
a single process) will emit 3 lines of output. The third line contains the full
path to the log file. Knowing this we can construct a simple pipeline:
</p></b>

<b><p><span class="arg">
$ forever logs | awk 'NR==3' | awk '{print $4}' | xargs tail -f
</span></p></b>

<b><p>
Above, forever emits its output => awk grabs the 3rd line using it's "number
of record/NR" syntax => another awk prints the 4th space delimited string from
that line (the path) => and finally xargs takes that and runs tail
-f(ollow)!
</p></b>

<b><p>
Familiarity with these *nix tools is infinitely reuseable as plain text is
the most common protocol and these tools are purpose built for working with
text.
</p></b>

<u>BUGS</u>
<b><p>
2020-04-16 Edit: If you are running a version more recent than v0.14.1
released Jul 1, 2015, there's a built-in flag to tail logs. <span class="arg">:facepalm:</span>
</p></b>

<b><p><span class="arg">
$ forever logs 0 -f
</span></p></b>
